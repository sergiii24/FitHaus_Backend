openapi: "3.0.1"
info:
  description: "Servidor de l'aplicació fithaus de l'assignatura PES. Aquí podràs trobar operacions per gestionar usuaris del sistema."
  version: "1.0.0"
  title: "SERVIDOR FITHAUS"
  contact:
    email: "fithaus2021@gmail.com"
servers:
  - url: "127.0.0.1:8000"
paths:
  /users:
    post:
      tags:
      - "user"
      summary: Crear usuari, es produeix quan aquest es registra per primer cop
      operationId: createUser
      requestBody:
        description: S'han de proporcionar els camps requerits. La resta seran automaticament assignats.
        content:
          application/json:
            schema:
              required: [username, firstName, lastName, email]
              type: object
              properties:
                username:
                  type: "string"
                  maxLength: 200
                  example: "Elmeuusername"
                  uniqueItems: true
                firstName:
                  type: "string"
                  maxLength: 200
                  example: "Elmeunom"
                lastName:
                  type: "string"
                  maxLength: 200
                  example: "Elsmeusocgnoms"
                email:
                  type: "string"
                  maxLength: 200
                  format: "email"
                  example: "elmeumail@mail.com"
                  uniqueItems: true
                password:
                  type: "string"
                  maxLength: 200
                  format: "password"
                  example: "Lamevapassword_1_#"
                gender:
                  type: "string"
                  enum: [ M, W, X ]
                  example: "X"
                birthdate:
                  type: "string"
                  format: "date"
                  example: "2021-05-12"
                uid:
                  type: "string"
                  example: "uid_proveidor"
                provider:
                  type: "string"
                  maxLength: 200
                  example: "elmeuproveidor"
      responses:
        "201":
          description: "Usuari creat"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: "Usuari ja existeix o dades no valides"
    get:
      tags:
      - "user"
      summary: "Retorna tots els users (o els que compleixin les condicions de la query)"
      operationId: "getAllUsers"
      parameters:
        - name: username
          in: query
          description: Nom de l'usuari
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: Email de l'usuari
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "404":
          description: "Cap usuari trobat"
  /user/{id}:
      get:
        tags:
          - "user"
        summary: "Obtenir l'usuari amb l'id especificat"
        description: "Proporcionar l'id de l'usuari"
        operationId: "getUserById"
        parameters:
          - name: "id"
            in: "path"
            description: "Id de l'usuari"
            required: true
            schema:
              type: "string"
        responses:
          "200":
            description: "Operació exitosa"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          "404":
            description: "Usuari no trobat"
      patch:
        tags:
          - "user"
        summary: "Actualitzar info d'un usuari"
        description: "Especificar només els camps a actualitzar"
        operationId: "updateUser"
        requestBody:
          description: "Proporcionar els camps a actualitzar"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: "string"
                    maxLength: 200
                  firstName:
                    type: "string"
                    maxLength: 200
                  lastName:
                    type: "string"
                    maxLength: 200
                  email:
                    type: "string"
                    maxLength: 200
                    format: "email"
                  password:
                    type: "string"
                    maxLength: 200
                    format: "password"
                  gender:
                    type: "string"
                    enum: [ M, W, X ]
                  birthdate:
                    type: "string"
                    maxLength: 200
                    format: "date"
                  activitiesdone:
                    type: "integer"
                    default: 0
                  achievements:
                    type: "string"
                    maxLength: 200
                  points:
                    type: "integer"
                    default: 0
                  level:
                    type: "integer"
                    default: 0
                  objective:
                    type: "string"
                    maxLength: 200
                  interestcategories:
                    type: "string"
                    maxLength: 200
                  weight:
                    type: "integer"
                    default: 0
                  height:
                    type: "integer"
                    default: 0
                  imc:
                    type: "integer"
                    default: 0
                  igc:
                    type: "integer"
                    default: 0
        responses:
          "200":
            description: "Operació exitosa"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          "400":
            description: "Dades no vàlides"
          "404":
            description: "Usuari no trobat"
      delete:
        tags:
          - "user"
        summary: "Eliminar usuari"
        description: "Proporcionar l'id de l'usuari"
        operationId: "deleteUser"
        parameters:
          - name: "id"
            in: "path"
            description: "Id de l'usuari a eliminar"
            required: true
            schema:
              type: "string"
        responses:
          "200":
            description: "Operació exitosa"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          "404":
            description: "Usuari no trobat"
  /users/login:
    post:
      tags:
        - "user"
      summary: "Loggejar usuari"
      operationId: "loginUser"
      requestBody:
        description: "Proporcionar el mail i la password de l'usuari a loggejar en cas que sigui un usuari
                      intern, proporcionar l'uid en cas que sigui un usuari d'un proveidor extern"
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: "Email de l'usuari"
                  required: false
                  type: "string"
                password:
                  description: "Contrasenya de l'usuari"
                  required: false
                  type: "string"
                uid:
                  description: "Uid del usuari extern, proporcionat pel proveidor"
                  required: false
                  type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: "Dades en format incorrecte"
        "401":
          description: "Credencials incorrectes"
        "404":
          description: "Usuari no existent"
  /users/stats:
    get:
      tags:
      - "user"
      summary: "Obtenir le estadístiques d'un usuari"
      operationId: "getUserStats"
      requestBody:
        description: "Proporcionar l'id de l'usuari"
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: "integer"
                  description: "Id de l'usuari"
                  required: true
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStats'
        "401":
          description: "Accés no autoritzat"
  /ranking:
    get:
      tags:
        - "user"
      summary: "Ranking usuaris"
      description: "Consultar el ranking dels usuaris"
      operationId: "UserRanking"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/UserRanking'
        "400":
          description: "Alguna cosa no ha anat bé..."

  /categories:
    post:
      tags:
        - "category"
      summary: "Crear categoria"
      description: "Crear una categoria a la BD"
      operationId: "createCategory"
      requestBody:
        description: "Proporcionar l'enumeració corresponent"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                category:
                  type: "string"
                  enum: [ S,C,Y,E,R,P ]
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        "400":
          description: "Categoria ja existent"
  /categories/{Name}:
    get:
      tags:
        - "category"
      summary: "Obtenir categoria amb el nom proporcionat"
      description: "Proporcionar el nom de la categoria en format enumeració"
      operationId: "getCatByName"
      parameters:
        - name: "Name"
          in: "path"
          description: "Nom de la categoria"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        "404":
          description: "Categoria no existent"

  /classes:
    post:
      tags:
        - "class"
      summary: "Crear classe"
      description: "Crear una classe a la BD"
      operationId: "createClass"
      requestBody:
        description: "Proporcionar tots els camps requerits"
        content:
          application/json:
            schema:
              required: [type, name, description, age, difficulty, length, categories, trainer, workarea]
              type: "object"
              properties:
                type:
                  type: "string"
                  enum: [E,C]
                name:
                  type: "string"
                  maxLength: 30
                description:
                  type: "string"
                  maxLength: 500
                age:
                  type: "string"
                  enum: [K,T,A,E]
                difficulty:
                  type: "string"
                  enum: [E,M,H]
                length:
                  type: "integer"
                categories:
                  type: "object"
                  format: Category
                trainer:
                  type: "string"
                workarea:
                  type: "string"
                  enum: [UB,LB,FB,C]
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        "400":
          description: "Dades amb format incorrecte"
    get:
      tags:
        - "class"
      summary: "Retorna totes les classes (o les que compleixin les condiciones de la query)"
      operationId: "getAllClasses"
      parameters:
        - name: "name"
          in: query
          description: "Nom de la classe"
          required: false
          schema:
            type: "string"
        - name: "type"
          in: query
          description: "Tipus de la classe"
          required: false
          schema:
            type: "string"
        - name: "age"
          in: query
          description: "Edat de la classe"
          required: false
          schema:
            type: "string"
        - name: "difficulty"
          in: query
          description: "Dificultat de la classe"
          required: false
          schema:
            type: "string"
        - name: "workarea"
          in: query
          description: "Area de treball de la classe"
          required: false
          schema:
            type: "string"
        - name: "categories"
          in: query
          description: "Categories de la classe"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        "404":
          description: "Cap classe trobada"
  /classes/{id}:
    get:
      tags:
        - "class"
      summary: "Obtenir classe amb l'id especificat"
      description: "Proporcionar l'id de la classe"
      operationId: "getClassById"
      parameters:
        - name: "id"
          in: "path"
          description: "Id de la classe"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        "404":
          description: "Classe no trobada"

  /exercises:
    post:
      tags:
        - "exercise"
      summary: "Crear exercici"
      description: "Crear un exercici a la BD"
      operationId: "createExercise"
      requestBody:
        description: "Proporcionar tots els camps requerits"
        content:
          application/json:
            schema:
              required: [type, name, description, age, difficulty, length, categories, muscle]
              type: object
              properties:
                type:
                  type: "string"
                  enum: [ E,C ]
                name:
                  type: "string"
                  maxLength: 30
                description:
                  type: "string"
                  maxLength: 200
                age:
                  type: "string"
                  enum: [ K,T,A,E ]
                difficulty:
                  type: "string"
                  enum: [ E,M,H ]
                length:
                  type: "integer"
                categories:
                  type: "object"
                  format: Category
                muscle:
                  type: "string"
                  enum: [ Bi,Tr,Fa,Ch,Sh,Do,Gl,Fe,Qu,Cm,Co]
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
        "400":
          description: "Dades amb format incorrecte"
    get:
      tags:
        - "exercise"
      summary: "Retorna tots els exercicis (o els que compleixen les condicions de la query)"
      operationId: "getAllExercises"
      parameters:
        - name: "name"
          in: "query"
          description: "Nom de l'exercici"
          required: false
          schema:
            type: "string"
        - name: "type"
          in: query
          description: "Tipus de l'exercici"
          required: false
          schema:
            type: "string"
        - name: "age"
          in: query
          description: "Edat de l'exercici"
          required: false
          schema:
            type: "string"
        - name: "difficulty"
          in: query
          description: "Dificultat de l'exercici"
          required: false
          schema:
            type: "string"
        - name: "muscle"
          in: query
          description: "Múscul treballat en l'exercici"
          required: false
          schema:
            type: "string"
        - name: "categories"
          in: query
          description: "Categories de l'exercici"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        "404":
          description: "Cap exercici trobat"
  /exercises/{id}:
    get:
      tags:
        - "exercise"
      summary: "Obtenir l'exercici amb l'id especificat"
      description: "Proporcionar l'id de l'exercici"
      operationId: "getExerById"
      parameters:
        - name: "id"
          in: "path"
          description: "Id de l'exercici"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
        "404":
          description: "Exercici no trobat"

  /objectives:
    post:
      tags:
        - "objective"
      summary: "Crear objectiu"
      description: "Crear un objectiu a la BD"
      operationId: "createObjective"
      requestBody:
        description: "Proporcionar el camp requerit en forma d'enumeració"
        content:
          application/json:
            schema:
              type: object
              properties:
                objective:
                  type: "string"
                  enum: [ S,Fr,P,Fl,Rs,Rc,A ]
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
        "400":
          description: "Dades incorrectes"
  /objectives/{Name}:
    get:
      tags:
        - "objective"
      summary: "Obtenir l'objectiu amb el nom especificat"
      description: "Proporcionar el nom de l'objectiu en forma d'enumeració"
      operationId: "getObjByName"
      parameters:
        - name: "Name"
          in: "path"
          description: "Nom de l'objectiu"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
        "404":
          description: "Objectiu no existent"

  /customroutines:
    post:
      tags:
        - "custom routine"
      summary: "Crear rutina personalitzada"
      description: "Crear un rutina personalitzada a la BD, hereta del model routines"
      operationId: "createCustomRoutine"
      requestBody:
        description: "Proporcionar tots els camps requerits"
        content:
          application/json:
            schema:
              required: [name, description, time, categories, exercises, classes, public, user]
              type: object
              properties:
                name:
                  type: "string"
                  maxLength: 100
                  uniqueItems: true
                description:
                  type: "string"
                time:
                  type: "string"
                  enum: [P,R,F]
                categories:
                  type: "object"
                exercises:
                  type: "object"
                classes:
                  type: "object"
                public:
                  type: "boolean"
                user:
                  type: "object"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customroutines'
        "400":
          description: "Dades amb format incorrecte"
    get:
      tags:
        - "custom routine"
      summary: "Retorna totes les rutines personalitzades (o les que compleixen les condicions de la query)"
      operationId: "getAllCustomRoutines"
      parameters:
        - name: "name"
          in: query
          description: "Nom de la rutina"
          required: false
          schema:
            type: "string"
        - name: "time"
          in: query
          description: "Temps de la rutina"
          required: false
          schema:
            type: "string"
        - name: "categories"
          in: query
          description: "Categories de la rutina"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customroutines'
        "404":
          description: "Cap rutina trobada"
  /customroutines/{id}:
    get:
      tags:
        - "custom routine"
      summary: "Obtenir rutina personalitzada amb id especificat"
      description: "Proporcionar l'id de la rutina"
      operationId: "getCustomRoutineById"
      parameters:
        - name: "id"
          in: "path"
          description: "Id de la rutina personalitzada"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customroutines'
        "404":
          description: "Rutina no trobada"

  /predefinedroutines:
    post:
      tags:
        - "predefined routine"
      summary: "Crear rutina predefinida"
      description: "Crear un rutina predefinida a la BD, hereta del model routines"
      operationId: "createCustomRoutine"
      requestBody:
        description: "Proporcionar tots els camps requerits"
        content:
          application/json:
            schema:
              required: [name, description, time, categories, exercises, classes, age, level, equipment, objective, impact, image, users]
              type: object
              properties:
                name:
                  type: "string"
                  maxLength: 100
                  uniqueItems: true
                description:
                  type: "string"
                time:
                  type: "string"
                  enum: [ P,R,F ]
                categories:
                  type: "object"
                exercises:
                  type: "object"
                classes:
                  type: "object"
                age:
                  type: "string"
                  enum: [ K,T,A,E ]
                level:
                  type: "string"
                  enum: [ P,I,A ]
                equipment:
                  type: "string"
                  enum: [ W,HM,K,D,B,RB,RL,FR ]
                objective:
                  type: "object"
                impact:
                  type: "string"
                  enum: [ L,M,H ]
                image:
                  type: "string"
                  format: "binary"
                users:
                  type: "object"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/predefinedroutines'
        "400":
          description: "Dades amb format incorrecte"
    get:
      tags:
        - "predefined routine"
      summary: "Retorna totes les rutines predefinides (o les que compleixen les condicions de la query)"
      operationId: "getAllPredefinedRoutines"
      parameters:
        - name: "name"
          in: query
          description: "Nom de la rutina"
          required: false
          schema:
            type: "string"
        - name: "time"
          in: query
          description: "Temps de la rutina"
          required: false
          schema:
            type: "string"
        - name: "categories"
          in: query
          description: "Categories de la rutina"
          required: false
          schema:
            type: "string"
        - name: "age"
          in: query
          description: "Edat de la rutina"
          required: false
          schema:
            type: "string"
        - name: "level"
          in: query
          description: "Nivell de la rutina"
          required: false
          schema:
            type: "string"
        - name: "equipment"
          in: query
          description: "Equipament per la rutina"
          required: false
          schema:
            type: "string"
        - name: "objective"
          in: query
          description: "Objectiu de la rutina"
          required: false
          schema:
            type: "string"
        - name: "impact"
          in: query
          description: "Impacte de la rutina"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customroutines'
        "404":
          description: "Cap rutina trobada"
  /predefinedroutines/{id}:
    get:
      tags:
        - "predefined routine"
      summary: "Obtenir rutina predefinida amb id especificat"
      description: "Proporcionar l'id de la rutina"
      operationId: "getPredefinedRoutineById"
      parameters:
        - name: "id"
          in: "path"
          description: "Id de la rutina predefinida"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/predefinedroutines'
        "404":
          description: "Rutina no existent"

  /trainings:
    post:
      tags:
        - "training"
      summary: "Crear entrenament"
      description: "Crear un entrenament a la BD, associat a un usuari"
      operationId: "createTraining"
      requestBody:
        description: "Proporcionar tots els camps requerits"
        content:
          application/json:
            schema:
              required: [ user, customroutines, predefinedroutines, date, hInici, hFi, done, shared ]
              type: object
              properties:
                user:
                  type: "object"
                customroutine:
                  type: "object"
                predefinedroutine:
                  type: "object"
                date:
                  type: "string"
                  format: "date"
                hInici:
                  type: "string"
                  format: "hour"
                hFi:
                  type: "string"
                  format: "hour"
                done:
                  type: "boolean"
                shared:
                  type: "boolean"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
        "400":
          description: "Dades amb format incorrecte"
    get:
      tags:
        - "training"
      summary: "Retorna tots els trainings (o els que compleixen les condicions de la query)"
      operationId: "getTrainings"
      parameters:
        - name: "username"
          in: "path"
          description: "Nom de l'usuari"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Training'
        "404":
          description: "Cap training trobat"
  /trainings/{id}:
    get:
      tags:
        - "training"
      summary: "Obtenir l'entrenament amb id especificat"
      description: "Proporcionar l'id de l'entrenament"
      operationId: "getTrainingById"
      parameters:
        - name: "id"
          in: "path"
          description: "Id de l'entrenament"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
        "404":
          description: "Training no existent"

  /programs:
    post:
      tags:
        - "program"
      summary: "Crear programa"
      description: "Crear un programa a la BD"
      operationId: "createProgram"
      requestBody:
        description: "Proporcionar els camps requerits"
        content:
          application/json:
            schema:
              required: [ name, description, level, weeks, predefinedroutines ]
              type: object
              properties:
                name:
                  type: "string"
                description:
                  type: "string"
                level:
                  type: "string"
                  enum: [ B,I,A ]
                weeks:
                  type: "integer"
                predefinedroutine:
                  type: "object"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
        "400":
          description: "Dades amb format incorrecte"
    get:
      tags:
        - "program"
      summary: "Obtenir tots els programes (o els que compleixen les condicions de la query)"
      operationId: "getPrograms"
      parameters:
        - name: "name"
          in: "path"
          description: "Nom del programa"
          required: true
          schema:
            type: "string"
        - name: "level"
          in: "path"
          description: "Nivell del programa"
          required: true
          schema:
            type: "string"
        - name: "weeks"
          in: "path"
          description: "Setmanes de el programa"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program'
        "404":
          description: "Cap programa trobat"
  /programs/{id}:
    get:
      tags:
        - "program"
      summary: "Obtenir el programa amb id especificat"
      description: "Proporcionar l'id del programa"
      operationId: "getProgramById"
      parameters:
        - name: "id"
          in: "path"
          description: "Id del programa"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
        "404":
          description: "Programa no existent"

  /collection:
    post:
      tags:
        - "collection"
      summary: "Crear col·lecció"
      description: "Crear un col·lecció a la BD"
      operationId: "createCollection"
      requestBody:
        description: "Proporcionar els camps requerits"
        content:
          application/json:
            schema:
              required: [ name, description, predefinedroutines ]
              type: object
              properties:
                name:
                  type: "string"
                description:
                  type: "string"
                predefinedroutine:
                  type: "object"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        "400":
          description: "Dades amb format incorrecte"
    get:
      tags:
        - "collection"
      summary: "Obtenir totes les col·leccions"
      operationId: "getCollections"
      responses:
        "200":
          description: "Operació exitosa"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
        "404":
          description: "Cap col·lecció trobada"
  /collection/{id}:
      get:
        tags:
          - "collection"
        summary: "Obtenir la col·lecció amb id especificat"
        description: "Proporcionar l'id de la col·lecció"
        operationId: "getCollectionById"
        parameters:
          - name: "id"
            in: "path"
            description: "Id de la col·lecció"
            required: true
            schema:
              type: "string"
        responses:
          "200":
            description: "Operació exitosa"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Collection'
          "404":
            description: "Col·lecció inexistent"


components:
  schemas:
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        username:
          type: "string"
          maxLength: 200
        firstName:
          type: "string"
          maxLength: 200
        lastName:
          type: "string"
          maxLength: 200
        email:
          type: "string"
          maxLength: 200
          format: "email"
        password:
          type: "string"
          maxLength: 200
          format: "password"
        gender:
          type: "string"
          enum: [M, W, X]
        birthdate:
          type: "string"
          maxLength: 200
          format: "date"
        activitiesdone:
          type: "integer"
          default: 0
        achievements:
          type: "string"
          maxLength: 200
        points:
          type: "integer"
          default: 0
        level:
          type: "string"
          enum: [B, I, A]
        objective:
          type: "object"
        categories:
          type: "object"
        strengthtrainings:
          type: "integer"
          default: 0
        cardiotrainings:
          type: "integer"
          default: 0
        yogatrainings:
          type: "integer"
          default: 0
        stretchingtrainings:
          type: "integer"
          default: 0
        rehabilitationtrainings:
          type: "integer"
          default: 0
        pilatestrainings:
          type: "integer"
          default: 0
        weight:
          type: "number"
          default: 0.0
        height:
          type: "number"
          default: 0.0
        imc:
          type: "number"
          default: 0.0
        igc:
          type: "number"
          default: 0.0

    UserRanking:
      type: "object"
      properties:
        username:
          type: "string"
          maxLength: 200
        points:
          type: "integer"
          default: 0

    UserStats:
      type: "object"
      properties:
        username:
          type: "string"
          maxLength: 200
        email:
          type: "string"
          maxLength: 200
          format: "email"
        activitiesdone:
          type: "integer"
          default: 0
        achievements:
          type: "string"
          maxLength: 200
        points:
          type: "integer"
          default: 0
        level:
          type: "integer"
          default: 0

    Activity:
      type: "object"
      properties:
        type:
          type: "string"
          maxLength: 30
          enum: [E,C]
        name:
          type: "string"
          maxLength: 30
        description:
          type: "string"
          maxLength: 200
        age:
          type: "string"
          maxLength: 30
          enum: [K,T,A,E]
        difficulty:
          type: "string"
          maxLength: 30
          enum: [E,M,H]
        length:
          type: "integer"
        categories:
          type: "object"
        pre:
          type: "string"
          format: "binary"

    Category:
      type: "object"
      properties:
        category:
          type: "string"
          enum: [ S,C,Y,E,R,P ]

    Class:
      type: "object"
      properties:
        type:
          type: "string"
          enum: [ E,C ]
        name:
          type: "string"
          maxLength: 30
        description:
          type: "string"
          maxLength: 200
        age:
          type: "string"
          enum: [ K,T,A,E ]
        difficulty:
          type: "string"
          enum: [ E,M,H ]
        length:
          type: "integer"
        categories:
          type: "object"
          format: Category
        pre:
          type: "string"
          format: "binary"
        videoclass:
          type: "string"
          format: "binary"
        trainer:
          type: "string"
        workarea:
          type: "string"
          enum: [ UB,LB,FB,C ]

    Exercise:
      type: "object"
      properties:
        type:
          type: "string"
          enum: [ E,C ]
        name:
          type: "string"
          maxLength: 30
        description:
          type: "string"
          maxLength: 200
        age:
          type: "string"
          enum: [ K,T,A,E ]
        difficulty:
          type: "string"
          enum: [ E,M,H ]
        length:
          type: "integer"
        categories:
          type: "object"
          format: Category
        pre:
          type: "string"
          format: "binary"
        muscleimage:
          type: "string"
          format: "binary"
        videotutorial:
          type: "string"
          format: "binary"
        videoexercise:
          type: "string"
          format: "binary"
        muscle:
          type: "string"
          enum: [ Bi,Tr,Fa,Ch,Sh,Do,Gl,Fe,Qu,Cm,Co ]

    Objective:
      type: "object"
      properties:
        objective:
          type: "string"
          enum: [ S,Fr,P,Fl,Rs,Rc,A ]

    Routine:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        time:
          type: "string"
          enum: [ P,R,F ]
        categories:
          type: "object"
        exercices:
          type: "object"
        classes:
          type: "object"

    CustomRoutine:
      type: "object"
      properties:
        name:
          type: "string"
          maxLength: 100
          uniqueItems: true
        description:
          type: "string"
        time:
          type: "string"
          enum: [ P,R,F ]
        categories:
          type: "object"
        exercises:
          type: "object"
        classes:
          type: "object"
        public:
          type: "boolean"
        user:
          type: "object"

    PredefinedRoutine:
      type: "object"
      properties:
        name:
          type: "string"
          maxLength: 100
          uniqueItems: true
        description:
          type: "string"
        time:
          type: "string"
          enum: [ P,R,F ]
        categories:
          type: "object"
        exercises:
          type: "object"
        classes:
          type: "object"
        age:
          type: "string"
          enum: [ K,T,A,E ]
        level:
          type: "string"
          enum: [ P,I,A ]
        equipment:
          type: "string"
          enum: [ W,HM,K,D,B,RB,RL,FR ]
        objective:
          type: "object"
        impact:
          type: "string"
          enum: [ L,M,H ]
        image:
          type: "string"
          format: "binary"
        users:
          type: "object"

    Training:
      type: "object"
      properties:
        user:
          type: "object"
        customroutine:
          type: "object"
        predefinedroutine:
          type: "object"
        date:
          type: "string"
          format: "date"
        hInici:
          type: "string"
          format: "hour"
        hFi:
          type: "string"
          format: "hour"
        done:
          type: "boolean"
        shared:
          type: "boolean"

    Program:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        level:
          type: "string"
          enum: [ B,I,A ]
        weeks:
          type: "integer"
        predefinedroutine:
          type: "object"

    Collection:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        predefinedroutine:
          type: "object"
