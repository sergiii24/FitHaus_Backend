swagger: "2.0"
info:
  description: "Servidor de l'aplicació fithaus de l'assignatura PES. Aquí podràs trobar operacions per gestionar usuaris del sistema."
  version: "1.0.0"
  title: "SERVIDOR FITHAUS"
  contact:
    email: "fithaus2021@gmail.com"
host: "127.0.0.1:8000"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Crear usuari"
      description: "Crear un usuari a la BD, es produeix quan aquest es registra per primer cop"
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
        - name: "username"
          in: "query"
          type: "string"
          maxLength: 200
        - name: "firstName"
          in: "query"
          type: "string"
          maxLength: 200
        - name: "lastName"
          in: "query"
          type: "string"
          maxLength: 200
        - name: "email"
          in: "query"
          type: "string"
          maxLength: 200
          format: "email"
        - name: "password"
          in: "query"
          type: "string"
          maxLength: 200
          format: "password"
        - name: "gender"
          in: "query"
          type: "string"
          enum: [ M, W, X ]
        - name: "birthdate"
          in: "query"
          type: "string"
          maxLength: 200
          format: "date"
        - name: "activitiesdone"
          in: "query"
          type: "integer"
          default: 0
        - name: "achievements"
          in: "query"
          type: "string"
          maxLength: 200
        - name: "points"
          in: "query"
          type: "integer"
          default: 0
        - name: "level"
          in: "query"
          type: "integer"
          default: 0
        - name: "objective"
          in: "query"
          type: "string"
          maxLength: 200
        - name: "interestcategories"
          in: "query"
          type: "string"
          maxLength: 200
        - name: "weight"
          in: "query"
          type: "integer"
          default: 0
        - name: "height"
          in: "query"
          type: "integer"
          default: 0
        - name: "imc"
          in: "query"
          type: "integer"
          default: 0
        - name: "igc"
          in: "query"
          type: "integer"
          default: 0
      responses:
        "200":
          description: "Operació exitosa"
        "400":
          description: "Usuari ja existeix"

  /user/login:
    get:
      tags:
      - "user"
      summary: "Loggejar usuari"
      description: "Loggeja un usuari <b>existent</b> al sistema"
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "query"
        description: "Email de l'usuari"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "Contrasenya de l'usuari"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operació exitosa"
        "400":
          description: "Credencials incorrectes"

  /user/{id}:
    get:
      tags:
      - "user"
      summary: "Obtenir informació de l'usuari"
      description: ""
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id de l'usuari"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operació exitosa"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Alguna cosa no ha anat bé..."

 #   put:
 #     tags:
 #     - "user"
 #     summary: "Updated user"
 #     description: "This can only be done by the logged in user."
 #     operationId: "updateUser"
 #     produces:
 #     - "application/json"
 #     parameters:
 #     - name: "id"
 #       in: "path"
 #       description: "name that need to be updated"
 #       required: true
 #       type: "string"
 #     - in: "body"
 #       name: "body"
 #       description: "Updated user object"
 #       required: true
 #       schema:
 #         $ref: "#/definitions/User"
 #     responses:
 #       "400":
 #         description: "Invalid user id supplied"
 #       "404":
 #         description: "User not found"
 #   delete:
 #     tags:
 #     - "user"
 #     summary: "Delete user"
 #     description: "This can only be done by the logged in user."
 #     operationId: "deleteUser"
 #     produces:
 #     - "application/json"
 #     parameters:
 #     - name: "id"
 #       in: "path"
 #       description: "The name that needs to be deleted"
 #       required: true
 #       type: "string"
 #     responses:
 #       "400":
 #         description: "Invalid user id supplied"
 #       "404":
 #         description: "User not found"

#securityDefinitions:
 # petstore_auth:
 #   type: "oauth2"
 #   authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
 #   flow: "implicit"
 #   scopes:
 #     write:pets: "modify pets in your account"
 #    read:pets: "read your pets"
 # api_key:
 #   type: "apiKey"
 #   name: "api_key"
 #   in: "header"

definitions:
  #User_creation:
  #  type: "object"
  #  properties:
  #    id:
  #      type: "integer"
  #      format: "int64"
  #    username:
  #      type: "string"
  #    firstName:
  #      type: "string"
  #    lastName:
  #      type: "string"
  #    email:
  #      type: "string"
  #    password:
  #      type: "string"
  #    gender:
  #      type: "string"
  #    birthdate:
  #      type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
        maxLength: 200
      firstName:
        type: "string"
        maxLength: 200
      lastName:
        type: "string"
        maxLength: 200
      email:
        type: "string"
        maxLength: 200
        format: "email"
      password:
        type: "string"
        maxLength: 200
        format: "password"
      gender:
        type: "string"
        enum: [M, W, X]
      birthdate:
        type: "string"
        maxLength: 200
        format: "date"
      activitiesdone:
        type: "integer"
        default: 0
      achievements:
        type: "string"
        maxLength: 200
      points:
        type: "integer"
        default: 0
      level:
        type: "integer"
        default: 0
      objective:
        type: "string"
        maxLength: 200
      interestcategories:
        type: "string"
        maxLength: 200
      weight:
        type: "integer"
        default: 0
      height:
        type: "integer"
        default: 0
      imc:
        type: "integer"
        default: 0
      igc:
        type: "integer"
        default: 0
  #ApiResponse:
  #  type: "object"
  #  properties:
  #    code:
  #      type: "integer"
  #      format: "int32"
  #    type:
  #      type: "string"
  #    message:
  #      type: "string"
